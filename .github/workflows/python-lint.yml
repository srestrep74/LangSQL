name: Python Linter

on:
  pull_request:
    branches:
      - develop
      - test/gitflows

permissions:
  contents: write
  issues: write

jobs:
  backend-tests:
    uses: ./.github/workflows/backend-tests.yml
    secrets: inherit

  frontend-tests:
    uses: ./.github/workflows/frontend-tests.yml
    secrets: inherit
    
  lint:
    needs: 
      - backend-tests
      - frontend-tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref_name }}
          persist-credentials: true

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install autopep8 autoflake flake8 isort

      - name: Auto-format with autopep8
        run: |
          autoflake --in-place --remove-all-unused-imports --remove-unused-variables --recursive --exclude venv,__pycache__ .
          autopep8 --in-place --recursive --aggressive --exclude venv,__pycache__ .
          isort --profile black .

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          BRANCH_NAME=${{ github.head_ref || github.ref_name }}
          
          # Ensure correct branch checkout
          git fetch origin "$BRANCH_NAME"
          git checkout "$BRANCH_NAME"

          # Stash any local changes before pulling
          git stash
          git pull --rebase origin "$BRANCH_NAME" || echo "No remote changes to rebase"
          git stash pop || echo "No stashed changes to apply"

          # Stage and commit changes if there are any
          git add .
          if ! git diff --cached --quiet; then
            git commit -m "style: run linter"
            git push origin "$BRANCH_NAME"
          else
            echo "No changes to commit."
          fi

      - name: Lint with flake8
        run: flake8 --config=.flake8 .
